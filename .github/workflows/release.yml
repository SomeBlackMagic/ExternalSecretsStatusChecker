name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build and Release Binaries and Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      - name: Build binaries
        run: |
          mkdir -p dist
          platforms=("linux/amd64" "linux/arm64" "linux/arm" "darwin/amd64" "darwin/arm64" "windows/amd64" "windows/arm64")
          for platform in "${platforms[@]}"
          do
            OS=$(echo $platform | cut -d'/' -f1)
            ARCH=$(echo $platform | cut -d'/' -f2)
            BIN_DIR="dist/${OS}-${ARCH}"
            mkdir -p "$BIN_DIR"
            OUTPUT_NAME="externalsecret-watcher"
            if [ "$OS" = "windows" ]; then
              OUTPUT_NAME="${OUTPUT_NAME}.exe"
            fi
            echo "Building $OUTPUT_NAME for $OS/$ARCH"
            env GOOS=$OS GOARCH=$ARCH CGO_ENABLED=0 go build -o "$BIN_DIR/$OUTPUT_NAME" main.go
            cp "$BIN_DIR/$OUTPUT_NAME" "dist/externalsecret-watcher-${OS}-${ARCH}${OUTPUT_NAME##*.}"
          done

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/externalsecret-watcher-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/externalsecret-watcher:${{ github.ref_name }}
          build-args: |
            BINARY=externalsecret-watcher
